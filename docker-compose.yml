version: '3.4'

services:
  api:
    image: ${DOCKER_REGISTRY-}ddgsapi
    container_name: ddgs.api
    build:
      context: .
      dockerfile: DDGS.Api/Dockerfile
    depends_on:
      postgresdb:
        condition:
          service_healthy
      mongodb:
        condition:
          service_started
    profiles:
      - with-https


  identity:
    image: ${DOCKER_REGISTRY-}ddgsidentity
    container_name: ddgs.identity
    build:
      context: .
      dockerfile: DDGS.Identity/Dockerfile
    depends_on:
      postgresdb:
        condition:
          service_healthy
    profiles:
      - with-https



  mongodb:
    image: mongo:latest
    container_name: ddgs.mongo.db
    restart: always


  postgresdb:
    image: ${DOCKER_REGISTRY-}ddgspostgresdb
    build:
      context: .
      dockerfile: DDGS.Postgres/Dockerfile
    container_name: ddgs.postrgres.db
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U superadmin -d DynamicDataGridSystemPostgresDb"]
      interval: 10s
      timeout: 5s
      retries: 5


  web-client-http:
    image: ${DOCKER_REGISTRY-}ddgsclient
    container_name: ddgs.client.http
    build:
      context: .
      dockerfile: ddgs.client/Dockerfile
    environment:
      - VITE_PROTOCOL=http
    profiles:
      - with-clients
      - with-http-client
      - without-https


  web-client-https:
    image: ${DOCKER_REGISTRY-}ddgsclient
    container_name: ddgs.client.https
    build:
      context: .
      dockerfile: ddgs.client/Dockerfile
    environment:
      - VITE_PROTOCOL=https
    profiles:
      - with-clients
      - with-https-client


  api-without-https:
    image: ${DOCKER_REGISTRY-}ddgsapi
    container_name: ddgs.api
    build:
      context: .
      dockerfile: DDGS.Api/Dockerfile
    depends_on:
      postgresdb:
        condition:
          service_healthy
      mongodb:
        condition:
          service_started
    profiles:
      - without-https


  identity-without-https:
    image: ${DOCKER_REGISTRY-}ddgsidentity
    container_name: ddgs.identity
    build:
      context: .
      dockerfile: DDGS.Identity/Dockerfile
    depends_on:
      postgresdb:
        condition:
          service_healthy
    profiles:
      - without-https


networks:
  ddgs-network:
    driver: bridge


volumes:
  ddgs-mongodb-volume:
  ddgs-postgresdb-volume:
